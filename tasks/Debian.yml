---
- name: Check installed packages
  shell: "dpkg -s {{ item }}"
  changed_when: "installed_packages.rc != 0"
  with_items: "{{required_packages}}"
  failed_when: False
  register: installed_packages

- name: Output not installed packages
  set_fact:
    has_not_installed_packages: True
  when: item.rc != 0
  with_items: "{{installed_packages.results}}"

- block:
  - name: Ensure apt cache is up to date
    apt:
      update_cache: yes

  - name: Install prerequisite packages
    package:
      name: "{{item}}"
    with_items: "{{required_packages}}"
  when: "has_not_installed_packages|default(False)"
  become: yes

- name: Expand PyEnv path
  shell: "eval echo {{pyenv_path}}"
  register: pyenv_path_result

- name: Set expanded Py Env path
  set_fact:
    pyenv_path: '{{pyenv_path_result.stdout}}'

- name: Install PyEnv
  git:
    repo: https://github.com/pyenv/pyenv.git
    dest: "{{ pyenv_path }}"
    update: "{{pyenv_update_git_install}}"
  become_user: "{{pyenv_owner}}"
  become: yes

- name: Install PyEnv-virtualenv plugin
  git:
    repo: https://github.com/yyuu/pyenv-virtualenv.git
    dest: "{{ pyenv_path }}/plugins/pyenv-virtualenv"
    update: "{{pyenv_update_git_install}}"
  become_user: "{{pyenv_owner}}"
  become: yes

- name: Install .pyenvrc
  template:
    src: ".pyenvrc.j2"
    dest: "{{ pyenv_path }}/.pyenvrc"
    owner: "{{ pyenv_owner }}"
    group: "{{ pyenv_owner }}"
    mode: "0644"
  become_user: "{{pyenv_owner}}"
  become: yes

- name: Modify .bashrc
  lineinfile: dest="~/.bashrc"
              regexp="\.pyenvrc$"
              line="source {{ pyenv_path }}/.pyenvrc"
              state=present
  become_user: "{{pyenv_owner}}"
  become: yes

- name: Install Python interpreters "{{ pyenv_python_versions }}"
  shell: . {{ pyenv_path }}/.pyenvrc && pyenv install {{ item }}
         creates="{{ pyenv_path }}/versions/{{ item }}/bin/python"
  with_items: "{{pyenv_python_versions}}"
  become_user: "{{pyenv_owner}}"
  become: yes

- name: Create virtual environments
  shell: . {{ pyenv_path }}/.pyenvrc && pyenv virtualenv {{ item.py_version }} {{ item.venv_name }}
         creates="{{ pyenv_path }}/versions/{{ item.venv_name }}/bin/python"
  with_items: "{{pyenv_virtualenvs}}"
  become_user: "{{pyenv_owner}}"
  become: yes
